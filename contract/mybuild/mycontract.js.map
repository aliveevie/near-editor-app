{"version":3,"file":"mycontract.js","sources":["../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/collections/vector.js","../src/mycontract.ts"],"sourcesContent":["export var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","import { bytes } from \"../utils\";\nimport { base58 } from '@scure/base';\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nfunction data_len(c) {\n    switch (c) {\n        case CurveType.ED25519:\n            return 32;\n        case CurveType.SECP256K1:\n            return 64;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction split_key_type_data(value) {\n    let idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [curveTypeFromStr(value.substring(0, idx)), value.substring(idx + 1)];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length) {\n        super(`Invalid length: ${length}`);\n        this.length = length;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\nexport class PublicKey {\n    constructor(data) {\n        this.data = data;\n        let curve_type = data.charCodeAt(0);\n        let curve_len = data_len(curve_type);\n        if (data.length != curve_len + 1) {\n            throw new InvalidLengthError(data.length);\n        }\n        this.data = data;\n    }\n    curveType() {\n        return this.data.charCodeAt(0);\n    }\n    static fromString(s) {\n        let [curve, key_data] = split_key_type_data(s);\n        let data;\n        try {\n            data = bytes(base58.decode(key_data));\n        }\n        catch (err) {\n            throw new Base58Error(err.message);\n        }\n        return new PublicKey(String.fromCharCode(curve) + data);\n    }\n}\n","import { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        throw Error(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport function initialize(target, key, descriptor) {\n}\nexport function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen({ requireInit = false }) {\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(obj) {\n                near.storageWrite(\"STATE\", this._serialize(obj));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value) {\n                return JSON.stringify(value);\n            }\n            static _deserialize(value) {\n                return JSON.parse(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    if (classObject[item].constructor?.deserialize !== undefined) {\n                        classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);\n                    }\n                    else {\n                        classObject[item] = plainObject[item];\n                    }\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.length) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import { NearBindgen, view, call, near, Vector } from \"near-sdk-js\";\n\n\n@NearBindgen({})\nclass Storage{\n        data:Vector = new Vector('data-id');\n        points = 0;\n\n        @view\n        view_data(){\n            return this.data.toArray()\n        }\n        \n        @call\n        get_data({url, contract_name}:{url:string, contract_name:string}){\n            const account_id = near.predecessorAccountId();\n            this.points += 1;\n            this.data.push({account_id:account_id, contract_name:contract_name, url:url, points:this.points})\n            near.log(`Data Insersation Was Successfull!`) \n        }\n\n        @call\n        view_accountDetails(){\n            const account_id = near.predecessorAccountId();\n            // View Data data for this account only\n            const accountData = new Vector('d');\n            for(let i = 0; i < this.data.length; i++){\n                if(this.data[i].account_id == account_id){\n                    accountData.push(this.data[i])\n                }\n            }\n\n            return accountData.toArray();\n        }\n\n}"],"names":["PromiseResult","PromiseError","u8ArrayToBytes","array","ret","e","String","fromCharCode","CurveType","U64_MAX","EVICTED_REGISTER","log","params","env","map","x","undefined","JSON","stringify","join","predecessorAccountId","predecessor_account_id","read_register","storageRead","key","storage_read","storageGetEvicted","input","storageWrite","value","exist","storage_write","storageRemove","storage_remove","call","target","descriptor","view","NearBindgen","requireInit","_create","_getState","rawState","near","_deserialize","_saveToStorage","obj","_serialize","_getArgs","parse","_reconstruct","classObject","plainObject","item","constructor","deserialize","_requireInit","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","prefix","index","data","Uint32Array","Uint8Array","buffer","Vector","length","isEmpty","get","storageKey","swapRemove","Error","pop","last","push","element","lastIndex","lastKey","replace","extend","elements","Symbol","iterator","VectorIterator","clear","i","toArray","v","serialize","vector","current","next","done","Storage","_dec","_class","_class2","points","view_data","get_data","url","contract_name","account_id","view_accountDetails","accountData","_applyDecoratedDescriptor","prototype","Object","getOwnPropertyDescriptor","_state","_contract","_args","_result","value_return"],"mappings":"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"}